/* tslint:disable */
/* eslint-disable */
/**
 * Speedruns - OpenAPI 3.0
 * Api f√ºr den vertikalen Prototypen
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Entry } from './Entry.ts';
import {
    EntryFromJSON,
    EntryToJSON,
} from './Entry.ts';
import type { Category } from './Category.ts';
import {
    CategoryFromJSON,
    CategoryToJSON,
} from './Category.ts';

/**
 * 
 * @export
 * @interface Leaderboard
 */
export interface Leaderboard {
    /**
     * 
     * @type {Category}
     * @memberof Leaderboard
     */
    category: Category;
    /**
     * 
     * @type {Array<Entry>}
     * @memberof Leaderboard
     */
    runs?: Array<Entry>;
}



/**
 * Check if a given object implements the Leaderboard interface.
 */
export function instanceOfLeaderboard(value: object): value is Leaderboard {
    if (!('category' in value) || value['category'] === undefined) return false;
    return true;
}

export function LeaderboardFromJSON(json: any): Leaderboard {
    return LeaderboardFromJSONTyped(json, false);
}

// @ts-ignore
export function LeaderboardFromJSONTyped(json: any, ignoreDiscriminator: boolean): Leaderboard {
    if (json == null) {
        return json;
    }
    return {
        
        'category': CategoryFromJSON(json['category']),
        'runs': json['runs'] == null ? undefined : ((json['runs'] as Array<any>).map(EntryFromJSON)),
    };
}

export function LeaderboardToJSON(json: any): Leaderboard {
    return LeaderboardToJSONTyped(json, false);
}

// @ts-ignore
export function LeaderboardToJSONTyped(value?: Leaderboard | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'category': CategoryToJSON(value['category']),
        'runs': value['runs'] == null ? undefined : ((value['runs'] as Array<any>).map(EntryToJSON)),
    };
}

