/* tslint:disable */
/* eslint-disable */
/**
 * Speedruns - OpenAPI 3.0
 * Api f√ºr den vertikalen Prototypen
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Leaderboard } from './Leaderboard.ts';
import {
    LeaderboardFromJSON,
    LeaderboardToJSON,
} from './Leaderboard.ts';

/**
 * 
 * @export
 * @interface Game
 */
export interface Game {
    /**
     * 
     * @type {string}
     * @memberof Game
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Game
     */
    imageUrl: string;
    /**
     * 
     * @type {string}
     * @memberof Game
     */
    slug: string;
    /**
     * 
     * @type {Array<Leaderboard>}
     * @memberof Game
     */
    leaderboards?: Array<Leaderboard>;
}

/**
 * Check if a given object implements the Game interface.
 */
export function instanceOfGame(value: object): value is Game {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('imageUrl' in value) || value['imageUrl'] === undefined) return false;
    if (!('slug' in value) || value['slug'] === undefined) return false;
    return true;
}

export function GameFromJSON(json: any): Game {
    return GameFromJSONTyped(json, false);
}

// @ts-ignore
export function GameFromJSONTyped(json: any, ignoreDiscriminator: boolean): Game {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'imageUrl': json['image_url'],
        'slug': json['slug'],
        'leaderboards': json['leaderboards'] == null ? undefined : ((json['leaderboards'] as Array<any>).map(LeaderboardFromJSON)),
    };
}

export function GameToJSON(json: any): Game {
    return GameToJSONTyped(json, false);
}

// @ts-ignore
export function GameToJSONTyped(value?: Game | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'image_url': value['imageUrl'],
        'slug': value['slug'],
        'leaderboards': value['leaderboards'] == null ? undefined : ((value['leaderboards'] as Array<any>).map(LeaderboardToJSON)),
    };
}

